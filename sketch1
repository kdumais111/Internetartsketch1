
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Responsive Words Grid Generator</title>
    <style>
      /* Default grid layout styles */
      #grid-container {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        /* Adjust the number of columns as needed */
        gap: 5px;
        /* Adjust the gap between cells */
      }

      /* Style for the words */
      .grid-word {
        border: 1px solid #000;
        padding: 1px;
        margin: 1px;
      }

      /* Media query for smaller screens */
      @media (max-width: 600px) {
        #grid-container {
          grid-template-columns: repeat(3, 1fr);
          /* Adjust for smaller screens */
        }
      }
    </style>
    <script src="node_modules/pandas-js/dist/pandas.js"></script>
    <script>
      // Function to read and process CSV data using pandas-js
      function readAndProcessCSV(csvFile) {
        // Use fetch API to get CSV file
        fetch(csvFile)
          .then(response => response.text())
          .then(csvData => {
            // Parse CSV data using pandas-js
            const df = pd.readCSV(csvData);

            // Display the DataFrame
            console.log(df);

            // Perform data manipulation tasks using pandas-js
            const filteredDF = df.filter(df.get('YourColumnName').length.gt(5));
            console.log(filteredDF);

            // Display the result or use it as needed
          })
          .catch(error => {
            console.error("Error reading CSV file:", error.message);
          });
      }

      readAndProcessCSV('top_500_words_tfidf_rep.csv');

      function createGrid(text) {
        const words = text.split(/\s+/);

        // Display words in a grid
        const gridContainer = document.createElement("div");
        gridContainer.id = "grid-container";

        words.forEach(word => {
          const wordElement = document.createElement("div");
          wordElement.classList.add("grid-word");
          wordElement.innerHTML = word;
          gridContainer.appendChild(wordElement);
        });

        document.body.appendChild(gridContainer);
      }

      // Example usage
      const inputText = "This is an example sentence for creating a responsive grid of randomly chosen words.";

      createGrid(inputText);
    </script>
  </head>
  <body>
  </body>
</html>